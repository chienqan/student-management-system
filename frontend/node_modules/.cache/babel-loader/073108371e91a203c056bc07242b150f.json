{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/hoanggia/Desktop/student-management-system/frontend/src/components/Student.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { getListStudent, deleteStudent, updateStudent } from '../services';\nimport { Table, Button, Form, FormGroup, Label, Input, FormText, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nexport default function Student() {\n  _s();\n\n  const [listStudent, setListStudent] = React.useState([]);\n  const [modal, setModal] = React.useState(false);\n  const [name, setName] = React.useState('');\n  const [age, setAge] = React.useState();\n  const [gender, setGender] = React.useState(true);\n  const [university, setUniversity] = React.useState();\n  const [studentId, setStudentId] = React.useState();\n\n  const toggle = student => {\n    setStudentId(student._id);\n    setName(student.name);\n    setAge(student.age);\n    setGender(student.gender);\n    setUniversity(student.university);\n    setModal(!modal);\n  };\n\n  React.useEffect(() => {\n    fetchList();\n  }, []);\n\n  const onSubmitForm = () => {\n    let student = {\n      \"_id\": studentId,\n      \"name\": name,\n      \"age\": age,\n      \"gender\": gender,\n      \"university\": university\n    };\n    updateStudent(student).then(() => fetchList());\n    setModal(!modal);\n  };\n\n  const fetchList = () => {\n    getListStudent().then(res => {\n      setListStudent(res.data.Student);\n    });\n  };\n\n  const deleteAStudent = studentId => {\n    deleteStudent(studentId).then(() => fetchList());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      color: \"success\",\n      children: \"Create New\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Age\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Gender\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"University\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: listStudent ? listStudent.map(student => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: student.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: student.age\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: student.gender ? \"Male\" : \"Female\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: student.university\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              color: \"danger\",\n              style: {\n                \"marginRight\": \"10px\"\n              },\n              onClick: () => deleteAStudent(student._id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => toggle(student),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)) : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: modal,\n        toggle: toggle,\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          toggle: toggle,\n          children: \"Modal title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"nameBox\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            value: name,\n            type: \"text\",\n            name: \"name\",\n            id: \"nameBox\",\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Label, {\n            for: \"ageBox\",\n            children: \"Age\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            value: age,\n            type: \"text\",\n            name: \"age\",\n            id: \"ageBox\",\n            onChange: e => setAge(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Label, {\n            for: \"universityBox\",\n            children: \"University\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            value: university,\n            type: \"text\",\n            name: \"university\",\n            id: \"universityBox\",\n            onChange: e => setUniversity(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            onClick: onSubmitForm,\n            children: \"Save Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 11\n          }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n            color: \"secondary\",\n            onClick: toggle,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Student, \"FxJdQlZh5/OvelYksy1/CQYUFkw=\");\n\n_c = Student;\n\nvar _c;\n\n$RefreshReg$(_c, \"Student\");","map":{"version":3,"sources":["/Users/hoanggia/Desktop/student-management-system/frontend/src/components/Student.js"],"names":["React","getListStudent","deleteStudent","updateStudent","Table","Button","Form","FormGroup","Label","Input","FormText","Modal","ModalHeader","ModalBody","ModalFooter","Student","listStudent","setListStudent","useState","modal","setModal","name","setName","age","setAge","gender","setGender","university","setUniversity","studentId","setStudentId","toggle","student","_id","useEffect","fetchList","onSubmitForm","then","res","data","deleteAStudent","map","e","target","value"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { getListStudent, deleteStudent, updateStudent } from '../services'\nimport {Table ,Button, Form, FormGroup, Label, Input, FormText, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nexport default function Student() {\n    const [listStudent, setListStudent] = React.useState([])\n    const [modal, setModal] = React.useState(false);\n    const [name, setName] = React.useState('');\n    const [age, setAge] = React.useState();\n    const [gender, setGender] = React.useState(true);\n    const [university, setUniversity] = React.useState();\n    const [studentId, setStudentId] = React.useState()\n    const toggle = (student) => {\n        setStudentId(student._id)\n        setName(student.name)\n        setAge(student.age)\n        setGender(student.gender)\n        setUniversity(student.university)    \n        setModal(!modal)\n    };\n    React.useEffect(() => {\n        fetchList()\n    }, [])\n\n    const onSubmitForm = () =>{\n        let student = {\"_id\":studentId, \"name\":name, \"age\":age,\"gender\":gender,\"university\":university}\n        updateStudent(student).then(()=> fetchList())\n        setModal(!modal)\n    }\n\n    const fetchList = () => {\n        getListStudent().then(res => {\n            setListStudent(res.data.Student)\n        })\n    }\n    const deleteAStudent = (studentId) => {\n        deleteStudent(studentId).then(() => fetchList())\n    }\n    return (\n        <div>\n            <Button color=\"success\">Create New</Button>\n            <Table>\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Age</th>\n                        <th>Gender</th>\n                        <th>University</th>\n                        <th>Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {listStudent ? listStudent.map(student =>\n                        <tr>\n                            <td>{student.name}</td>\n                            <td>{student.age}</td>\n                            <td>{student.gender ? \"Male\" : \"Female\"}</td>\n                            <td>{student.university}</td>\n                            <td>\n                                <Button color=\"danger\" style={{\"marginRight\":\"10px\"}} onClick={()=>deleteAStudent(student._id)}>Delete</Button>\n                                <Button onClick={()=>toggle(student)}>Edit</Button>\n                            </td>\n                        </tr>\n                    )\n                        : \"\"}\n                </tbody>\n            </Table>\n            <div>\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle}>Modal title</ModalHeader>\n        <ModalBody>\n            <Label for=\"nameBox\">Name</Label>\n            <Input value={name} type=\"text\" name=\"name\" id=\"nameBox\" onChange={e => setName(e.target.value)}/>\n            <Label for=\"ageBox\">Age</Label>\n            <Input value={age} type=\"text\" name=\"age\" id=\"ageBox\" onChange={e => setAge(e.target.value)} />         \n            <Label for=\"universityBox\">University</Label>\n            <Input value={university} type=\"text\" name=\"university\" id=\"universityBox\" onChange={e => setUniversity(e.target.value)} />            \n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={onSubmitForm}>Save Changes</Button>{' '}\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n        </div>\n\n    )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}