{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/hoanggia/Desktop/student-management-system/frontend/src/components/Student.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { getListStudent, deleteStudent, updateStudent, createNewStudent } from '../services';\nimport { Table, Button, Label, Input, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nexport default function Student() {\n  _s();\n\n  const [listStudent, setListStudent] = React.useState([]);\n  const [modal, setModal] = React.useState(false);\n  const [name, setName] = React.useState('');\n  const [age, setAge] = React.useState();\n  const [university, setUniversity] = React.useState();\n  const [studentId, setStudentId] = React.useState();\n  const [isUpdate, setIsUpdate] = React.useState();\n\n  const onUpdate = student => {\n    setIsUpdate(true);\n    setStudentId(student._id);\n    setName(student.name);\n    setAge(student.age);\n    setUniversity(student.university);\n    setModal(!modal);\n  };\n\n  const toggle = (student, isNew) => {\n    setModal(!modal);\n  };\n\n  const onCreate = (student, isNew) => {\n    setIsUpdate(false);\n    setName(\"\");\n    setAge(\"\");\n    setUniversity(\"\");\n    setModal(!modal);\n  };\n\n  React.useEffect(() => {\n    fetchList();\n  }, []);\n\n  const onSubmitForm = () => {\n    if (isUpdate) {\n      let student = {\n        \"_id\": studentId,\n        \"name\": name,\n        \"age\": age,\n        \"university\": university\n      };\n      updateStudent(student).then(() => {\n        fetchList();\n      });\n    } else {\n      let student = {\n        \"name\": name,\n        \"age\": age,\n        \"university\": university\n      };\n      createNewStudent(student).then(() => fetchList());\n    }\n\n    setStudentId(\"\");\n    setName(\"\");\n    setAge(\"\");\n    setUniversity(\"\");\n    setModal(!modal);\n  };\n\n  const fetchList = () => {\n    getListStudent().then(res => {\n      setListStudent(res.data.Student);\n    });\n  };\n\n  const deleteAStudent = studentId => {\n    deleteStudent(studentId).then(() => fetchList());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      color: \"success\",\n      style: {\n        \"margin\": \"10px\"\n      },\n      onClick: onCreate,\n      children: \"Create New\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Age\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"University\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: listStudent ? listStudent.map(student => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: student.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: student.age\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: student.university\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              color: \"danger\",\n              style: {\n                \"marginRight\": \"10px\"\n              },\n              onClick: () => deleteAStudent(student._id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => onUpdate(student, false),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this)) : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: modal,\n        toggle: toggle,\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          toggle: toggle,\n          children: \"Student\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"nameBox\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            value: name,\n            type: \"text\",\n            name: \"name\",\n            id: \"nameBox\",\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Label, {\n            for: \"ageBox\",\n            children: \"Age\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            value: age,\n            type: \"text\",\n            name: \"age\",\n            id: \"ageBox\",\n            onChange: e => setAge(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Label, {\n            for: \"universityBox\",\n            children: \"University\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            value: university,\n            type: \"text\",\n            name: \"university\",\n            id: \"universityBox\",\n            onChange: e => setUniversity(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            onClick: () => onSubmitForm(isUpdate),\n            children: \"OK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n            color: \"secondary\",\n            onClick: toggle,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Student, \"8Nsui4PZ45BmZBLtMTIDurxcfb0=\");\n\n_c = Student;\n\nvar _c;\n\n$RefreshReg$(_c, \"Student\");","map":{"version":3,"sources":["/Users/hoanggia/Desktop/student-management-system/frontend/src/components/Student.js"],"names":["React","getListStudent","deleteStudent","updateStudent","createNewStudent","Table","Button","Label","Input","Modal","ModalHeader","ModalBody","ModalFooter","Student","listStudent","setListStudent","useState","modal","setModal","name","setName","age","setAge","university","setUniversity","studentId","setStudentId","isUpdate","setIsUpdate","onUpdate","student","_id","toggle","isNew","onCreate","useEffect","fetchList","onSubmitForm","then","res","data","deleteAStudent","map","e","target","value"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { getListStudent, deleteStudent, updateStudent, createNewStudent } from '../services'\nimport { Table, Button, Label, Input, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nexport default function Student() {\n    const [listStudent, setListStudent] = React.useState([])\n    const [modal, setModal] = React.useState(false);\n    const [name, setName] = React.useState('');\n    const [age, setAge] = React.useState();\n    const [university, setUniversity] = React.useState();\n    const [studentId, setStudentId] = React.useState()\n    const [isUpdate, setIsUpdate] = React.useState();\n    const onUpdate = (student) => {\n        setIsUpdate(true)\n        setStudentId(student._id)\n        setName(student.name)\n        setAge(student.age)\n        setUniversity(student.university)\n        setModal(!modal)\n    };\n    const toggle = (student, isNew) => {\n        setModal(!modal)\n    };\n    const onCreate = (student, isNew) => {\n        setIsUpdate(false)\n        setName(\"\")\n        setAge(\"\")\n        setUniversity(\"\")\n        setModal(!modal)\n    };\n    React.useEffect(() => {\n        fetchList()\n    }, [])\n\n    const onSubmitForm = () => {\n        if(isUpdate){\n        let student = { \"_id\": studentId, \"name\": name, \"age\": age, \"university\": university }\n\n            updateStudent(student).then(() => {\n                fetchList()\n            })\n        }else{\n            let student = {\"name\": name, \"age\": age, \"university\": university }\n            createNewStudent(student).then(()=> fetchList())\n        }\n        setStudentId(\"\")\n        setName(\"\")\n        setAge(\"\")\n        setUniversity(\"\")\n        setModal(!modal)\n    }\n\n\n    const fetchList = () => {\n        getListStudent().then(res => {\n            setListStudent(res.data.Student)\n        })\n    }\n    const deleteAStudent = (studentId) => {\n        deleteStudent(studentId).then(() => fetchList())\n    }\n    return (\n        <div>\n            <Button color=\"success\" style={{ \"margin\": \"10px\" }} onClick={onCreate}>Create New</Button>\n            <Table>\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Age</th>\n                        <th>University</th>\n                        <th>Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {listStudent ? listStudent.map(student =>\n                        <tr>\n                            <td>{student.name}</td>\n                            <td>{student.age}</td>\n                            <td>{student.university}</td>\n                            <td>\n                                <Button color=\"danger\" style={{ \"marginRight\": \"10px\" }} onClick={() => deleteAStudent(student._id)}>Delete</Button>\n                                <Button onClick={() => onUpdate(student, false)}>Edit</Button>\n                            </td>\n                        </tr>\n                    )\n                        : \"\"}\n                </tbody>\n            </Table>\n            <div>\n                <Modal isOpen={modal} toggle={toggle}>\n                    <ModalHeader toggle={toggle}>Student</ModalHeader>\n                    <ModalBody>\n                        <Label for=\"nameBox\">Name</Label>\n                        <Input value={name} type=\"text\" name=\"name\" id=\"nameBox\" onChange={e => setName(e.target.value)} />\n                        <Label for=\"ageBox\">Age</Label>\n                        <Input value={age} type=\"text\" name=\"age\" id=\"ageBox\" onChange={e => setAge(e.target.value)} />\n                        <Label for=\"universityBox\">University</Label>\n                        <Input value={university} type=\"text\" name=\"university\" id=\"universityBox\" onChange={e => setUniversity(e.target.value)} />\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"primary\" onClick={() => onSubmitForm(isUpdate)}>OK</Button>{' '}\n                        <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n        </div>\n\n    )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}